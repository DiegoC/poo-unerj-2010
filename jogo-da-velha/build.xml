<?xml version="1.0"?>
<!-- build file for poo-unerj program -->
<!-- Created by: Andre Castoldi &lt;&gt;  -->

<project name="poo-unerj" default="run" basedir=".">
  <property name="src" value="./src"/>
  <property name="test" value="./tests"/>
  <property name="build" value="./build"/>
  <property name="compile.debug"       value="true"/>

  <path id="compile.classpath">
    <pathelement location="${mysql.jdbc}"/>
    <pathelement location="./lib/junit-4.8.1.jar"/>   
    <pathelement location="./lib/junit.jar"/>
    <pathelement path="${build}"/>
  </path>  


<!-- 
Build all Java source files into destdir.  This is common in Java
projects: the compile target is trivial, since it just says to build
everything.  Fancier compiler targets are easy if you want to build
just one file at a time.
 -->
    <target name="build" depends="init">
        <javac srcdir="${src}" 
               destdir="${build}"
               debug="${compile.debug}"
               source="1.5">
           <classpath refid="compile.classpath"/>
        </javac>
        <javac srcdir="${test}" 
               destdir="${build}"
               debug="${compile.debug}"
               source="1.5">
           <classpath refid="compile.classpath"/>
        </javac>
    </target>

<!--
init is a target that sets things up for the build.  Since we use the
built-in ant function mkdir, it will only make the directory if it
does not already exist.
-->
  <target name="init">
    <mkdir dir="${build}"/>
  </target>


  <target name="run" depends="build">
    <java classname="GameLauncher"  
        fork="true" 
        dir="${build}" 
        classpath="${build}" 
        maxmemory="500m">
    </java>
  </target>  
    
  <target name="test" depends="build">
    <junit printsummary="on"
           fork="false"
           haltonfailure="false"
           failureproperty="tests.failed"
           showoutput="true">
      <classpath refid="compile.classpath"/>
      <formatter type="brief" usefile="false" />   
      <batchtest>
          <fileset dir="${test}">
            <include name="**/*Tests.java"/>
          </fileset>
      </batchtest>
    </junit>
  </target>

  <fail if="tests.failed">
    ****************************************************************
    ****************************************************************
    Um ou mais testes falharam. Verifique o log de compilação...
    ****************************************************************
    ****************************************************************
  </fail>
        
<!--
Always include a clean target to get rid of all the extra files
created by the build process, so you can save storage safely, without
thinking.  Also: sometimes you'll want to do a completely fresh build,
such as when changing to a new version of the JDK.
-->
  <target name="clean" description="Removes previous build">
    <delete verbose="true">
      <fileset dir="${build}"/>
    </delete>
  </target>

</project>

